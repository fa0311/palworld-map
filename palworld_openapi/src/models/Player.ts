/* tslint:disable */
/* eslint-disable */
/**
 * PalWorld OpenAPI
 * PalWorld OpenAPI(Swagger) specification
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: yuki@yuki0311.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Player
 */
export interface Player {
    /**
     * 
     * @type {string}
     * @memberof Player
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Player
     */
    playerId: string;
    /**
     * 
     * @type {string}
     * @memberof Player
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof Player
     */
    ip: string;
    /**
     * 
     * @type {number}
     * @memberof Player
     */
    ping: number;
    /**
     * 
     * @type {number}
     * @memberof Player
     */
    locationX: number;
    /**
     * 
     * @type {number}
     * @memberof Player
     */
    locationY: number;
    /**
     * 
     * @type {number}
     * @memberof Player
     */
    level: number;
}

/**
 * Check if a given object implements the Player interface.
 */
export function instanceOfPlayer(value: object): boolean {
    if (!('name' in value)) return false;
    if (!('playerId' in value)) return false;
    if (!('userId' in value)) return false;
    if (!('ip' in value)) return false;
    if (!('ping' in value)) return false;
    if (!('locationX' in value)) return false;
    if (!('locationY' in value)) return false;
    if (!('level' in value)) return false;
    return true;
}

export function PlayerFromJSON(json: any): Player {
    return PlayerFromJSONTyped(json, false);
}

export function PlayerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Player {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'playerId': json['playerId'],
        'userId': json['userId'],
        'ip': json['ip'],
        'ping': json['ping'],
        'locationX': json['location_x'],
        'locationY': json['location_y'],
        'level': json['level'],
    };
}

export function PlayerToJSON(value?: Player | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'playerId': value['playerId'],
        'userId': value['userId'],
        'ip': value['ip'],
        'ping': value['ping'],
        'location_x': value['locationX'],
        'location_y': value['locationY'],
        'level': value['level'],
    };
}

